dev.off()
png("gearmpg.png")
graph3 <-  ggplot(mtcars, aes(gear, mpg))
graph3a <- graph3 + geom_boxplot(aes(fill=gear)) + xlab("No. Of Forward Gears") + ylab("Miles Per Gallon")
print(graph3a)
dev.off()
print(graph3a)
png("carbmpg.png")
graph4 <-  ggplot(mtcars, aes(carb, mpg))
graph4a <- graph4 + geom_boxplot(aes(fill=gear)) + xlab("No. Of Forward Gears") + ylab("Miles Per Gallon")
print(graph4a)
dev.off()
print(graph4a)
graph4 <-  ggplot(mtcars, aes(carb, mpg))
graph4a <- graph4 + geom_boxplot(aes(fill=carb)) + xlab("No. Of Forward Gears") + ylab("Miles Per Gallon")
print(graph4a)
dev.off()
print(graph4a)
png("wtmpg.png")
graph5 <-  ggplot(mtcars, aes(wt, mpg))
graph5a <- graph5 + geom_line() + xlab("Weight (in tons)") + ylab("Miles Per Gallon")
print(graph5a)
dev.off()
print(graph5a)
graph5a <- graph5 + geom_line() +stat_smooth(se=FALSE)+ xlab("Weight (in tons)") + ylab("Miles Per Gallon")
print(graph5a)
print(graph5a)
graph4a <- graph4 + geom_boxplot(aes(fill=carb)) + stat_smooth(se=FALSE) + xlab("No. Of Carboureters") + ylab("Miles Per Gallon")
print(graph4a)
png("wtmpg.png")
graph5 <-  ggplot(mtcars, aes(wt, mpg))
graph5a <- graph5 + geom_line() + stat_smooth(se=FALSE) + xlab("Weight (in tons)") + ylab("Miles Per Gallon")
print(graph5a)
dev.off()
print(graph5a)
png("dispmpg.png")
graph6 <-  ggplot(mtcars, aes(disp, mpg))
graph6a <- graph6 + geom_line() + stat_smooth(se=FALSE) + xlab("Displacement") + ylab("Miles Per Gallon")
print(graph6a)
dev.off()
print(graph6a)
png("hpmpg.png")
graph7 <-  ggplot(mtcars, aes(hp, mpg))
graph7a <- graph7 + geom_line() + stat_smooth(se=FALSE) + xlab("Horsepower") + ylab("Miles Per Gallon")
print(graph7a)
dev.off()
print(graph7a)
png("dratmpg.png")
graph8 <-  ggplot(mtcars, aes(drat, mpg))
graph8a <- graph8 + geom_line() + stat_smooth(se=FALSE) + xlab("Real Axle Ratio") + ylab("Miles Per Gallon")
print(graph8a)
dev.off()
print(graph8a)
png("qsecmpg.png")
graph9 <-  ggplot(mtcars, aes(qsec, mpg))
graph9a <- graph9 + geom_line() + stat_smooth(se=FALSE) + xlab("Real Axle Ratio") + ylab("Miles Per Gallon")
print(graph9a)
dev.off()
print(graph9a)
first_model <- lm(mpg~., data=mtcars)
11
summary(first_model)
best_model <- step(first_model, direction = "both")
summary(best_model)
lm(mpg~cyl8, hp, wt, amManual)
lm(mpg~cyl8, hp, wt, amManual, data=mtcars)
lm(formula=mpg~cyl+hp+wt+am, data=mtcars)
test<-lm(formula=mpg~cyl+hp+wt+am, data=mtcars)
summary(test)
test2<-lm(formula=mpg~cyl+hp+wt, data=mtcars)
summary(test2)
plot(summary2)
plot(test2)
par(mfrow=c(2,2))
plot(test2)
plot(best_model)
plot(test2)
summary(first_model)
summary(first_model)
best_model <- step(first_model, direction = "both")
summary(best_model)
#Load mtcars data
library(datasets)
data(mtcars)
head(mtcars)
library(ggplot2)
library(GGally)
library(lattice)
mtcars$cyl <- factor(mtcars$cyl)
mtcars$vs <- factor(mtcars$vs, labels=c("V-Engine", "Straight Engine"))
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
mtcars$am <- factor(mtcars$am, labels=c("Automatic", "Manual"))
str(mtcars)
#Is Automatic or Manual Transmission better for MPG?
#Quantify the MPG difference between automatic and manual transmission?
#http://rstudio-pubs-static.s3.amazonaws.com/20260_6b6ddcddd3ba4432804990538f00f179.html
#Executive Summary
#Exploratory Data Analysis
png("autovsmanualmpg.png")
graph <-  ggplot(mtcars, aes(am, mpg))
grapha <- graph + geom_boxplot(aes(fill=am)) + xlab("Transmission Type") + ylab("Miles Per Gallon")
print(grapha)
dev.off()
png("cylmpg.png")
graph1 <-  ggplot(mtcars, aes(cyl, mpg))
graph1a <- graph1 + geom_boxplot(aes(fill=cyl)) + xlab("Cylinders") + ylab("Miles Per Gallon")
print(graph1a)
dev.off()
png("vsmpg.png")
graph2 <-  ggplot(mtcars, aes(vs, mpg))
graph2a <- graph2 + geom_boxplot(aes(fill=vs)) + xlab("Piston Alignment") + ylab("Miles Per Gallon")
print(graph2a)
dev.off()
png("gearmpg.png")
graph3 <-  ggplot(mtcars, aes(gear, mpg))
graph3a <- graph3 + geom_boxplot(aes(fill=gear)) + xlab("No. Of Forward Gears") + ylab("Miles Per Gallon")
print(graph3a)
dev.off()
png("carbmpg.png")
graph4 <-  ggplot(mtcars, aes(carb, mpg))
graph4a <- graph4 + geom_boxplot(aes(fill=carb)) + xlab("No. Of Carboureters") + ylab("Miles Per Gallon")
print(graph4a)
dev.off()
png("wtmpg.png")
graph5 <-  ggplot(mtcars, aes(wt, mpg))
graph5a <- graph5 + geom_line() + stat_smooth(se=FALSE) + xlab("Weight (in tons)") + ylab("Miles Per Gallon")
print(graph5a)
dev.off()
png("dispmpg.png")
graph6 <-  ggplot(mtcars, aes(disp, mpg))
graph6a <- graph6 + geom_line() + stat_smooth(se=FALSE) + xlab("Displacement") + ylab("Miles Per Gallon")
print(graph6a)
dev.off()
png("hpmpg.png")
graph7 <-  ggplot(mtcars, aes(hp, mpg))
graph7a <- graph7 + geom_line() + stat_smooth(se=FALSE) + xlab("Horsepower") + ylab("Miles Per Gallon")
print(graph7a)
dev.off()
png("dratmpg.png")
graph8 <-  ggplot(mtcars, aes(drat, mpg))
graph8a <- graph8 + geom_line() + stat_smooth(se=FALSE) + xlab("Real Axle Ratio") + ylab("Miles Per Gallon")
print(graph8a)
dev.off()
png("qsecmpg.png")
graph9 <-  ggplot(mtcars, aes(qsec, mpg))
graph9a <- graph9 + geom_line() + stat_smooth(se=FALSE) + xlab("Quarter Mile Time (secs)") + ylab("Miles Per Gallon")
print(graph9a)
#Fit Multiple Models and Detial Strategy for Model Selection
first_model <- lm(mpg~., data=mtcars)
summary(first_model)
best_model <- step(first_model, direction = "both")
summary(best_model)
par(mfrow=c(2,2))
plot(best_model)
#Interpret Coefficient Correctly
#Residual plot and some diagnostics
#Quantify Uncertainty in conclusions and Perform Inference Correctly
#Answer questions of interest or details why not answerable
mtcars$cyl6 <- if(mtcars$cyl == 6, 1, 0)
mtcars$cyl6 <- if(mtcars$cyl == 6) {1} else {0}
mtcars$cyl6 <- if(mtcars$cyl == 6) {1 else 0}
mtcars$cyl6 <- if(mtcars$cyl == 6) {x <- 1 else x <- 0}
mtcars$cyl6 <- if(mtcars$cyl == 6) {x <- 1}
mtcars$cyl6 <- if(mtcars$cyl == 6) {1}
mtcars$cyl6 <- if(mtcars$cyl == 6) 1 else 0
mtcars$cyl6 <- if(mtcars$cyl == 6) 1
mtcars$cyl6 <- if(mtcars$cyl == 6) 1
mtcars$cyl6 <- ifelse(mtcars$cyl == 6) 1
mtcars$cyl6 <- ifelse(mtcars$cyl == 6) {1}
mtcars$cyl6 <- ifelse(mtcars$cyl == 6, 1, 0)
View(mtcars)
View(mtcars)
mtcars$cyl8 <- ifelse(mtcars$cyl == 8, 1, 0)
mtcars$VConfig <- ifelse(mtcars$vs == "V-Engine", 1, 0)
View(mtcars)
mtcars$Automatic <- ifelse(mtcars$am == 0, 1, 0)
mtcars$cyl6 <- ifelse(mtcars$cyl == 6, 1, 0)
mtcars$cyl8 <- ifelse(mtcars$cyl == 8, 1, 0)
mtcars$cyl <- factor(mtcars$cyl)
mtcars$vs <- factor(mtcars$vs, labels=c("V-Engine", "Straight Engine"))
mtcars$VConfig <- ifelse(mtcars$vs == "V-Engine", 1, 0)
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
mtcars$am <- factor(mtcars$am, labels=c("Automatic", "Manual"))
mtcars$Automatic <- ifelse(mtcars$am == 0, 1, 0)
str(mtcars)
mtcars$cyl6 <- ifelse(mtcars$cyl == 6, 1, 0)
mtcars$cyl8 <- ifelse(mtcars$cyl == 8, 1, 0)
mtcars$cyl <- factor(mtcars$cyl)
mtcars$vs <- factor(mtcars$vs, labels=c("V-Engine", "Straight Engine"))
mtcars$VConfig <- ifelse(mtcars$vs == "V-Engine", 1, 0)
mtcars$gear <- factor(mtcars$gear)
mrcars$4Gear <- ifelse(mtcars$gear == 4, 1, 0)
mrcars$5Gear <- ifelse(mtcars$gear == 5, 1, 0)
mtcars$carb <- factor(mtcars$carb)
mtcars$2Carb <- ifelse(mtcars$carb == 2, 1, 0)
mtcars$3Carb <- ifelse(mtcars$carb == 3, 1, 0)
mtcars$4Carb <- ifelse(mtcars$carb == 4, 1, 0)
mtcars$5Carb <- ifelse(mtcars$carb == 5, 1, 0)
mtcars$6Carb <- ifelse(mtcars$carb == 6, 1, 0)
mtcars$am <- factor(mtcars$am, labels=c("Automatic", "Manual"))
mtcars$Automatic <- ifelse(mtcars$am == 0, 1, 0)
mtcars$cyl6 <- ifelse(mtcars$cyl == 6, 1, 0)
mtcars$cyl8 <- ifelse(mtcars$cyl == 8, 1, 0)
mtcars$cyl <- factor(mtcars$cyl)
mtcars$vs <- factor(mtcars$vs, labels=c("V-Engine", "Straight Engine"))
mtcars$VConfig <- ifelse(mtcars$vs == "V-Engine", 1, 0)
mtcars$gear <- factor(mtcars$gear)
mrcars$FourGear <- ifelse(mtcars$gear == 4, 1, 0)
mrcars$FiveGear <- ifelse(mtcars$gear == 5, 1, 0)
mtcars$carb <- factor(mtcars$carb)
mtcars$TwoCarb <- ifelse(mtcars$carb == 2, 1, 0)
mtcars$ThreeCarb <- ifelse(mtcars$carb == 3, 1, 0)
mtcars$FourCarb <- ifelse(mtcars$carb == 4, 1, 0)
mtcars$FiveCarb <- ifelse(mtcars$carb == 5, 1, 0)
mtcars$SixCarb <- ifelse(mtcars$carb == 6, 1, 0)
mtcars$am <- factor(mtcars$am, labels=c("Automatic", "Manual"))
mtcars$Automatic <- ifelse(mtcars$am == 0, 1, 0)
str(mtcars)
names(mtcards)
names(mtcars)
Inference_set <- mtcars[, c("mpg", "disp", "hp", "drat", "wt", "qsec", "cyl6", "cyl8", "VConfig", "Automatic", "TwoCarb", "ThreeCarb", "FourCarb", "FiveCarb", "SixCarb")]
View(Inference_set)
Inference_set <- mtcars[, c("mpg", "disp", "hp", "drat", "wt", "qsec", "cyl6", "cyl8", "VConfig", "Automatic", "TwoCarb", "ThreeCarb", "FourCarb", "FiveCarb", "SixCarb")]
first_model <- lm(mpg~., data=Inference_Set)
summary(first_model)
best_model <- step(first_model, direction = "both")
summary(best_model)
par(mfrow=c(2,2))
plot(best_model)
Inference_set <- mtcars[, c("mpg", "disp", "hp", "drat", "wt", "qsec", "cyl6", "cyl8", "VConfig", "Automatic", "TwoCarb", "ThreeCarb", "FourCarb", "FiveCarb", "SixCarb")]
first_model <- lm(mpg~., data=Inference_Set)
Inference_Set <- mtcars[, c("mpg", "disp", "hp", "drat", "wt", "qsec", "cyl6", "cyl8", "VConfig", "Automatic", "TwoCarb", "ThreeCarb", "FourCarb", "FiveCarb", "SixCarb")]
first_model <- lm(mpg~., data=Inference_Set)
summary(first_model)
mtcars$Automatic <- ifelse(mtcars$am == 0, 1, 0)
View(mtcars)
mtcars$Automatic <- ifelse(mtcars$am == "Automatic", 1, 0)
View(mtcars)
mtcars$carb <- factor(mtcars$carb)
mtcars$TwoCarb <- ifelse(mtcars$carb == 2, 1, 0)
mtcars$ThreeCarb <- ifelse(mtcars$carb == 3, 1, 0)
mtcars$FourCarb <- ifelse(mtcars$carb == 4, 1, 0)
mtcars$SixCarb <- ifelse(mtcars$carb == 6, 1, 0)
mtcars$EightCarb <- ifelse(mtcars$carb == 8, 1, 0)
mtcars$am <- factor(mtcars$am, labels=c("Automatic", "Manual"))
mtcars$Automatic <- ifelse(mtcars$am == "Automatic", 1, 0)
Inference_Set <- mtcars[, c("mpg", "disp", "hp", "drat", "wt", "qsec", "cyl6", "cyl8", "VConfig", "Automatic", "TwoCarb", "ThreeCarb", "FourCarb", "FiveCarb", "SixCarb")]
first_model <- lm(mpg~., data=Inference_Set)
summary(first_model)
Inference_Set <- mtcars[, c("mpg", "disp", "hp", "drat", "wt", "qsec", "cyl6", "cyl8", "VConfig", "Automatic", "TwoCarb", "ThreeCarb", "FourCarb", "SixCarb", "EightCarb")]
first_model <- lm(mpg~., data=Inference_Set)
summary(first_model)
best_model <- step(first_model, direction = "both")
lm(mpg~hp+wt+cyl6+VConfig+Automatic)
lm(mpg~hp+wt+cyl6+VConfig+Automatic, data=Inference_Set)
test<-lm(mpg~hp+wt+cyl6+VConfig+Automatic, data=Inference_Set)
summary(test)
test2<-lm(mpg~hp+wt+cyl6+Automatic, data=Inference_Set)
summary(test2)
anova(first_model, test2)
anova(test2, first_model)
base_model <- lm(mpg~Automatic, data=Inference_Set)
summary(base_model)
anova(base_model, test2)
anova(base_model, best_model)
anova(test2, best_model)
plot(best_model)
plot(best_model)
#Load mtcars data
library(datasets)
data(mtcars)
head(mtcars)
library(ggplot2)
library(GGally)
library(lattice)
plot(best_model)
qplot(best_model)
par(mfrow=c(2,2))
plot(best_model)
plot(test2)
data <- read.csv("C:\\Users\\a585885\\Documents\\_1My Work\\_1Project Docs\\_9BBC\\England postcodes.csv")
head(data)
data2[1:10,1:5]
data[1:10,1:5]
data[1:10,1:6]
data[1:10,1:7]
data[1:10,1:8]
data[1:10,1:9]
data[1:10,c(1:5,9)]
data <- read.csv("C:\\Users\\a585885\\Documents\\_1My Work\\_1Project Docs\\_9BBC\\England postcodes.csv")
head(data)
data$Terminated <- as.Date(data$Terminated)
data2 <- data[is.na(data$Terminated),]
data2 <- data2[,c("Postcode", "Longitude", "Latitude", "County", "District", "Ward", "Country", "Constituency", "Region")]
data2$Labour <- runif((data3$Ward),0,100)
EastofEngland <- data2[data2$Region == "East of England", ]
EastofEngland$avelong <- ave(EastofEngland$Longitude, data2$Ward)
EastofEngland$avelat <- ave(EastofEngland$Latitude, data2$Ward)
View(EastofEngland)
uniques(data2$Ward)
unique(data2$Ward)
EastofEngland2 <- EastofEngland[unique(data2$ward),]
EastofEngland2 <- EastofEngland[unique(EastofEngland$ward),]
EastofEngland2 <- EastofEngland[unique(EastofEngland$Ward),]
View(EastofEngland2)
unique(EastofEngland$Ward)
unique(EastofEngland2$Ward)
EastofEnglandWard <- unique(EastofEngland$Ward)
head(EastofEnglandWard)
duplicated(EastofEngland$Ward)
View(EastofEngland)
duplicates <- duplicated(EastofEngland$Ward)
EastofEngland2 <- EastofEngland[duplicates == "FALSE",]
rm(EastofEngland2)
EastofEngland2 <- EastofEngland[unique(EastofEngland$Ward),]
View(EastofEngland2)
rm(EastofEngland2)
EastofEngland2 <- EastofEngland[duplicates == "FALSE",]
View(EastofEngland2)
rm(data2)
rm(EastofEngland)
rm(EastofEngland2)
rm(duplicates)
rm(EastofEnglandWard)
data$Terminated <- as.Date(data$Terminated)
data2 <- data[is.na(data$Terminated),]
data2 <- data2[,c("Postcode", "Longitude", "Latitude", "County", "District", "Ward", "Country", "Constituency", "Region")]
data2$Labour <- runif((data2$Ward),0,100)
EastofEngland <- data2[data2$Region == "East of England", ]
EastofEngland$avelong <- ave(EastofEngland$Longitude, data2$Ward)
EastofEngland$avelat <- ave(EastofEngland$Latitude, data2$Ward)
EastofEnglandduplicates <- duplicated(EastofEngland$Ward)
EastofEngland2 <- EastofEngland[EastofEnglandduplicates == "FALSE",]
data(shuttle)
library(MASS)
data(shuttle)
str(shuttle)
glm.out = glm(autolander~wind, family=binomial(logit), data=shuttle)
glm.out = glm(use~wind, family=binomial(logit), data=shuttle)
summary(glm.out
summary(glm.out)
summary(glm.out)
glm2 = glm(use~wind+magn, family=binomial(logit), data=shuttle)
summary(glm2)
glm2 = glm(use~wind/magn, family=binomial(logit), data=shuttle)
summary(glm2)
View(shuttle)
glm2 = glm(use~wind+magn, family=binomial(logit), data=shuttle)
View(shuttle)
glm2 = glm(use~wind+magn, family=binomial(logit), data=shuttle)
summary(glm2)
glm.out = glm(use~wind, family=binomial(logit), data=shuttle)
summary(glm.out)
glm.out2 = glm((1-use)~wind, family=binomial(logit), data=shuttle)
View(shuttle)
data(InsectSprays)
summary(InsectSprays)
str(InsectSprays)
glm.pois <- glm(count~spray, family="poisson", data=InsectSprays)
summary(glm.poiss)
summary(glm.pois)
log(10)
glm.out = glm(use~wind, family=binomial, data=shuttle)
summary(glm.out)
glm2 = glm(use~wind+magn, family=binomial(logit), data=shuttle)
summary(glm2)
e(0.031)
exp(0.031)
exp(-0.031)
exp(-0.03201)
glm.pois <- glm(count~spray, family="poisson", data=InsectSprays)
summary(glm.pois)
glm.pois <- glm(count~sprayB/sprayA, family="poisson", data=InsectSprays)
1/0.5588
1-0.056
install.packages(c("digest", "formatR", "highr", "knitr", "manipulate", "mime", "Rcpp", "rmarkdown"))
install.packages("rJava")
library(rJava)
install.package(rJava)
J()
library()
install.packages("xlsx")
library(xlsx)
JAVA_HOME
export JAVA_HOME
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre7\\')
library(xlsx)
rJava
library(xlsx)
install.packages("shiny")
setwd("C:\\Users\\a585885\\Documents\\_1My Work\\R Work\\Developing Data Products\\Shiny")
runApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
head(mtcars)
runApp()
runApp()
head(mtcars)
mtcars[,2]
runApp()
head(mtcarsd)
head(mtcars)
mtcars[,c(8,9,10,11)]
runApp()
test <- as.numeric(2)
ggplot(mtcars, aes(factor(mtcars[, column]), mpg)) + geomboxplot()
ggplot(mtcars, aes(factor(mtcars[, column]), mpg)) + geom_boxplot()
ggplot(mtcars, aes(factor(mtcars[[, column]]), mpg)) + geom_boxplot()
ggplot(mtcars, aes(factor(mtcars[[, test]]), mpg)) + geom_boxplot()
ggplot(mtcars, aes(factor(mtcars[, test]), mpg)) + geom_boxplot()
runApp()
runApp()
runApp()
runApp()
runApp()
names(mtcars)
names(mtcars)[, test]
names(mtcars)[2, ]
datatable <- names(mtcars)
datatable[,2]
datatable[2]
names(mtcars)[2]
runApp()
head(mtcars)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
names(mtcars)
runApp()
names(mtcars)[1]
runApp()
ggplot(mtcars, aes(factor(mtcars[,datatable]), mtcars[,yvar]))+geom_boxplot(aes(fill=factor(mtcars[,datatable]))) + xlab(names(mtcars)[datatable]) + ylab(names(mtcars)[yvar]) + ggtitle(BoxPlot of names(mtcars)[datatable] against names(mtcars[yvar])) + guides(fill=FALSE)
ggplot(mtcars, aes(factor(mtcars[,datatable]), mtcars[,yvar]))+geom_boxplot(aes(fill=factor(mtcars[,datatable]))) + xlab(names(mtcars)[datatable]) + ylab(names(mtcars)[yvar]) + ggtitle("BoxPlot of" names(mtcars)[datatable] "against" names(mtcars[yvar])) + guides(fill=FALSE)
title <- paste(Boxplot of, names(mtcars)[datatable], against, names(mtcars)[yvar])
title <- paste("Boxplot of", names(mtcars)[datatable], "against", names(mtcars)[yvar])
title <- paste("Boxplot of", names(datatablenames)[datatable], "against", names(datatablenames)[yvar])
datatablenames <- names(mtcars)
names(mtcars) <- c("Miles Per Gallon", "Cylinders", "Displacement", "HorsePower", "Drat", "Weight", "Quarter Mile Time", "Piston Configuration", "Automatic", "No. of Gears", "No. of Carburetors")
datatablenames <- names(mtcars)
title <- paste("Boxplot of", names(datatablenames)[datatable], "against", names(datatablenames)[yvar])
title <- paste("Boxplot of", datatablenames[datatable], "against", datatablenames[yvar])
ggplot(mtcars, aes(factor(mtcars[,datatable]), mtcars[,yvar]))
+ geom_boxplot(aes(fill=factor(mtcars[,datatable])))
+ xlab(names(mtcars)[datatable])
+ ylab(names(mtcars)[yvar])
+ ggtitle(paste0(title))
+ guides(fill=FALSE)
ggplot(mtcars, aes(factor(mtcars[,datatable]), mtcars[,yvar])) +
geom_boxplot(aes(fill=factor(mtcars[,datatable]))) +
xlab(names(mtcars)[datatable]) +
ylab(names(mtcars)[yvar]) +
ggtitle(paste0(title)) +
guides(fill=FALSE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
mtcars[,c(datatable, yvar)]
runApp()
runApp()
runApp()
runApp()
runApp()
x <- mtcars
x <- "mtcars"
data(x)
x <- 'mtcars'
data(list=x)
table(data(list=x))
z <- data(list=x)
table(get(z))
?data
data(list=x)
data(list=x)[,1]
x<- data(list=x)
print(data(list=x))
str(data(list=x))
str(x)
data(list=x)
x <- 'mtcars'
data(list=x)
as.data.frame(data(list=x))
mrcars
mtcars
data(list=mtcars)
x <- mtcars
x <- "iris"
data(list=x)
[iris]
as.dataframe(x)
as.data.frame
as.data.frame(data(list=x))
